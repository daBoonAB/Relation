@model Relation.Web.ViewModels.OrderViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_EditLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>OrderViewModel</legend>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyID, new { @class = "form-label" })
            @Html.EditorFor(model => model.CompanyID, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CompanyID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserID)
            @Html.ValidationMessageFor(model => model.UserID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CustomerID)
            @Html.ValidationMessageFor(model => model.CustomerID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerPersonID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CustomerPersonID)
            @Html.ValidationMessageFor(model => model.CustomerPersonID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductID)
            @Html.ValidationMessageFor(model => model.ProductID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Amount)
            @Html.ValidationMessageFor(model => model.Amount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UnitPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UnitPrice)
            @Html.ValidationMessageFor(model => model.UnitPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Invoice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Invoice)
            @Html.ValidationMessageFor(model => model.Invoice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InvoieOK)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InvoieOK)
            @Html.ValidationMessageFor(model => model.InvoieOK)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.When)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.When)
            @Html.ValidationMessageFor(model => model.When)
        </div>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
